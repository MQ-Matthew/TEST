<?php
/*--------------------------------------------------------------------
 小微OA系统 - 让工作更轻松快乐

 Copyright (c) 2013 http://www.smeoa.com All rights reserved.

 Author:  jinzhu.yin<smeoa@qq.com>

 Support: https://git.oschina.net/smeoa/xiaowei
 --------------------------------------------------------------*/

// 后台用户模块
namespace Home\Controller;

class UserController extends HomeController {
	//protected $config = array('app_type' => 'master');//如果是这个参数，在授权时将会访问不到，会是空白页面
    protected $config = array('app_type' => 'personal');//如果是这个参数，就可以授权了

	function _search_filter(&$map) {
		$keyword = I('keyword');
		if (!empty($keyword)) {
			$map['name|emp_no'] = array('like', "%" . $keyword . "%");
		}
	}

	public function index() {
        
		$plugin['date'] = true;
		$this -> assign("plugin", $plugin);

		$model = M("Position");
		$list = $model -> where('is_del=0') -> order('sort asc') -> getField('id,name');
		$this -> assign('position_list', $list);

		$model = M("Dept");
		$list = $model -> where('is_del=0') -> order('sort asc') -> getField('id,name');
		$this -> assign('dept_list', $list);
        
        $model = M("User");
        $list = $model -> where('is_del=0') -> order('id asc') -> getField('emp_no,name');
        $this -> assign('agent_list', $list);
        

		if (isset($_POST['eq_is_del'])) {
			$eq_is_del = $_POST['eq_is_del'];
		} else {
			$eq_is_del = "0";
		}
		//die;
		$this -> assign('eq_is_del', $eq_is_del);

		$map = $this -> _search();
		if (method_exists($this, '_search_filter')) {
			$this -> _search_filter($map);
		}
		$map['is_del'] = array('eq', $eq_is_del);

		$model = D("User");

		if (!empty($model)) {
			$this -> _list($model, $map, "emp_no");
		}
		$this -> display();
	}

	public function add() {
		$plugin['date'] = true;
		$this -> assign("plugin", $plugin);

		$model = M("Position");
		$list = $model -> where('is_del=0') -> order('sort asc') -> getField('id,name');
		$this -> assign('position_list', $list);

		$model = M("Dept");
		$list = $model -> where('is_del=0') -> order('sort asc') -> getField('id,name');
		$this -> assign('dept_list', $list);

		$this -> display();
	}

	// 检查帐号
	public function check_account() {
		if (!preg_match('/^[a-z]\w{4,}$/i', $_POST['emp_no'])) {
			$this -> error('用户名必须是字母，且5位以上！');
		}
		$User = M("User");
		// 检测用户名是否冲突
		$name = I('emp_no'); ;
		$result = $User -> getByAccount($name);
		if ($result) {
			$this -> error('该编码已经存在！');
		} else {
			$this -> assign('jumpUrl', get_return_url());
			$this -> success('该编码可以使用！');
		}
	}

	// 插入数据
	protected function _insert($name = "User") {
		// 创建数据对象
		$model = D("User");
		if (!$model -> create()) {
			$this -> error($model -> getError());
		} else {
            $Identity = 'dp_'.I('dept_id').'_'.I('position_id').'|';
            $Identity_name = '<'.I('dept_name').'-'.I('position_name').'>';
			// 写入帐号数据    
			$model -> letter = get_letter($model -> name);
			$model -> password = !isset($model->password) ? md5('111111'):md5($model -> emp_no);
			$model -> dept_id = I('dept_id');
            $model -> identity =  $Identity;
            $model -> identity_name =  $Identity_name;
			$model -> openid = $model -> emp_no;
			$model -> westatus = 1;
			$emp_no = $model -> emp_no;
			$name = $model -> name;
			$mobile_tel = $model -> mobile_tel;

			if ($result = $model -> add()) {
				$data['id'] = $result;
				M("UserConfig") -> add($data);
				if (get_system_config('system_license')) {
					if (!empty($mobile_tel)) {
						import("Weixin.ORG.Util.Weixin");
						$weixin = new \Weixin();
						$mobile_tel = trim($mobile_tel, '+-');
						$weixin -> add_user($emp_no, $name, $mobile_tel);
					}
				}
                syncdate_log('A','User',$result); //记录更新日志
				$this -> assign('jumpUrl', get_return_url());
				$this -> success('用户添加成功！');
			} else {
				$this -> error('用户添加失败！');
			}
		}
	}

	protected function _update($name = "User") {
		$model = D($name);
		if (false === $model -> create()) {
			$this -> error($model -> getError());
		}
        
		// 更新数据
		$model -> __set('letter', get_letter($model -> __get('name')));
        //基础身份处理
        $m_identity = I('identity');        
        $identity_array = explode('|', substr($m_identity, 0, -1));       
        $identity_base_array = explode('_', $identity_array[0]);       
        $model -> dept_id =  $identity_base_array[1];      //部门id
        $model -> position_id =  $identity_base_array[2];  //职位id
        
		$emp_no = $model -> emp_no;
		$name = $model -> name;
		$mobile_tel = $model -> mobile_tel;
               
		$is_del = $model -> is_del;
		$list = $model -> save(); 
		if (false !== $list) {
			if (get_system_config('system_license')) {
				if (!empty($mobile_tel)) {
					import("Weixin.ORG.Util.Weixin");
					$weixin = new \Weixin();
					$mobile_tel = trim($mobile_tel, '+-');
					$weixin -> add_user($emp_no, $name, $mobile_tel);
					$weixin -> update_user($emp_no, $name, $mobile_tel, $is_del);
				}
			}
            syncdate_log('U','User',I('id')); //记录更新日志 
			$this -> assign('jumpUrl', get_return_url());
			$this -> success('编辑成功!');
		} else {
			//错误提示
			$this -> error('编辑失败!');
		}
	}

	private function _weixin_sync($user_list) {

		import("Weixin.ORG.Util.Weixin");
		$weixin = new \Weixin($agent_id);

		$where['emp_no'] = array('in', $user_list);
		$user_list = M("User") -> where(array('is_del' => 0)) -> getField('emp_no,name,mobile_tel');

		$error_code_desc = C('WEIXIN_ERROR_CODE');

		foreach ($user_list as $key => $val) {
			$emp_no = $val['emp_no'];
			$name = $val['name'];
			$mobile_tel = trim($val['mobile_tel'], '+-');
			$error_code =         json_decode($weixin -> add_user($emp_no, $name, $mobile_tel)) -> errcode;
 //
				//
				// $error_code =       json_decode($weixin -> add_user($emp_no, $name, $mobile_tel)) -> errcode;
				//
				// $error_code =           json_decode($weixin -> add_user($emp_no, $name, $mobile_tel)) -> errcode;
				//
				// $error_code =           json_decode($weixin -> add_user($emp_no, $name, $mobile_tel)) -> errcode;
				//
				// $error_code =              json_decode($weixin -> add_user($emp_no, $name, $mobile_tel)) -> errcode;
			

			$list[$key]['error_code'] = $error_code;
			$list[$key]['desc'] = $error_code_desc[$error_code];
			$list[$key]['emp_no'] = $key;
		}
		$this -> assign('list', $list);
		$this -> display();
	}

	protected function add_default_role($user_id) {
		//新增用户自动加入相应权限组
		$RoleUser = M("RoleUser");
		$RoleUser -> user_id = $user_id;
		// 默认加入网站编辑组
		$RoleUser -> role_id = 3;
		$RoleUser -> add();
	}

	//重置密码
	public function reset_pwd() {
		$id = $_POST['user_id'];
		$password = $_POST['password'];
		if ('' == trim($password)) {
			$this -> error('密码不能为空!');
		}
		$User = M('User');
		$User -> password = md5($password);
		$User -> id = $id;
		$result = $User -> save();
		if (false !== $result) {
			$this -> assign('jumpUrl', get_return_url());
			$this -> success("密码修改成功");
		} else {
			$this -> error('重置密码失败！');
		}
	}

	function del_pwd() {
		$id = $_POST['user_id'];
		$User = M('User');
		$where['id'] = array('in', $id);
		$data['pay_pwd'] = '';
		$result = $User -> where($where) -> save($data);
		if (false !== $result) {
			$this -> assign('jumpUrl', get_return_url());
			$this -> success("密码清除成功");
		} else {
			$this -> error('清除密码失败！');
		}
	}

	public function password() {
		$this -> assign("id", I('id'));
		$this -> display();
	}

	function json() {
		header("Content-Type:text/html; charset=utf-8");
		$key = $_REQUEST['key'];

		$model = M("User");
		$where['name'] = array('like', "%" . $key . "%");
		$where['emp_no'] = array('like', "%" . $key . "%");
		$where['_logic'] = 'or';
		$map['_complex'] = $where;
		$list = $model -> where($map) -> field('id,name') -> select();
		exit(json_encode($list));
	}

	function del() {
		$id = I('user_id');
		$admin_user_list = C('ADMIN_USER_LIST');
 
		if (!empty($admin_user_list)) {
			$where['emp_no'] = array('not in', $admin_user_list);
		}
		$where['id'] = array('in', $id);

		$user_id = M("User") -> where($where) -> getField('id', TRUE);
		$emp_no = M("User") -> where($where) -> getField('emp_no', TRUE);

		if (get_system_config('system_license')) {
			import("Weixin.ORG.Util.Weixin");
			$weixin = new \Weixin();
			$restr = $weixin -> del_user($emp_no);
		}
        
        syncdate_log('D','User',implode(",",$emp_no)); //记录更新日志
		//R('Ldap/del', array($emp_no));
		$this -> _destory($user_id);
	}

	public function import() {
		$opmode = $_POST["opmode"];
		//var_dump($opmode);die;
		if ($opmode == "import") {
			$import_user = array();
			$File = D('File');
			$file_driver = C('DOWNLOAD_UPLOAD_DRIVER');
			
			$info = $File -> upload($_FILES, C('DOWNLOAD_UPLOAD'), C('DOWNLOAD_UPLOAD_DRIVER'), C("UPLOAD_{$file_driver}_CONFIG"));
			//var_dump($info);die;
			if (!$info) {
				$this -> error('上传错误');
			} else {
				//取得成功上传的文件信息
				//$uploadList = $upload -> getUploadFileInfo();
				Vendor('Excel.PHPExcel');
				//导入thinkphp第三方类库

				$import_file = $info['uploadfile']["path"];
				//去掉/截取
				$import_file = substr($import_file, 4);
				//var_dump($import_file);die;

				$objPHPExcel = \PHPExcel_IOFactory::load($import_file);
				//$objPHPExcel = \PHPExcel_IOFactory::load("Uploads/Download/user/2017-12/5a37369e4adc7.xlsx");
				//var_dump($objPHPExcel);die;
				//$objPHPExcel = \PHPExcel_IOFactory::load('Uploads/Download/Org/2014-12/547e87ac4b0bf.xls');
				$dept = M("Dept") -> getField('name,id');
				$position = M("Position") -> getField('name,id');
				$role = M("Role") -> getField('name,id');
				$sheetData = $objPHPExcel -> getActiveSheet() -> toArray(null, true, true, true);
				//var_dump($sheetData);die;
				/*$model = D("User");
				for ($i = 2; $i <= count($sheetData); $i++) {
					$data = array();
					$import_user[] = $sheetData[$i]["A"];
					$data_user['emp_no'] = $sheetData[$i]["A"];
					$data_user['name'] = $sheetData[$i]["B"];

					$data_user['dept_id'] = $dept[$sheetData[$i]["C"]];
					$data_user['position_id'] = $position[$sheetData[$i]["D"]];

					$data_user['duty'] = $sheetData[$i]["J"];
					$data_user['office_tel'] = $sheetData[$i]["F"];
					$data_user['mobile_tel'] = $sheetData[$i]["G"];
					$data_user['sex'] = $sheetData[$i]["H"];
					$data_user['birthday'] = $sheetData[$i]["I"];
					$data_user['open_id'] = $sheetData[$i]["A"];
					$data_user['westatus'] = 1;
					$data_user['password'] = md5($sheetData[$i]["A"]);

					$role_list = explode($sheetData[$i]["E"]);
					foreach ($role_list as $key => $val) {
						$data_role[] = $role[$val];
					}
					//$user_id = M("User") -> add($data_user);
					$this -> add_role($user_id, $data_role);
					
				}*/
				//$model = D("User_file");
				for ($i = 3; $i <= count($sheetData); $i++) {
					$data_ufile['user_id'] = $sheetData[$i]["A"];
					$data_ufile['xrzw'] = $sheetData[$i]["E"];
					$data_ufile['xrzsj'] = $sheetData[$i]["F"];
					$data_ufile['age'] = $sheetData[$i]["J"];
					$data_ufile['minzu'] = $sheetData[$i]["K"];
					$data_ufile['jiguan'] = $sheetData[$i]["L"];
					$data_ufile['csd'] = $sheetData[$i]["M"];
					$data_ufile['gzsj'] = $sheetData[$i]["N"];
					$data_ufile['gongli'] = $sheetData[$i]["P"];
					$data_ufile['bndkxsdxxjts'] = $sheetData[$i]["Q"];
					$data_ufile['lzsj'] = $sheetData[$i]["R"];
					$data_ufile['csbjslynx'] = $sheetData[$i]["S"];
					$data_ufile['htlx'] = $sheetData[$i]["T"];
					$data_ufile['pyhtqx'] = $sheetData[$i]["U"];
					$data_ufile['xpgw'] = $sheetData[$i]["V"];
					$data_ufile['gwsj'] = $sheetData[$i]["W"];
					$data_ufile['bgwnx'] = $sheetData[$i]["X"];
					$data_ufile['gwjb'] = $sheetData[$i]["Y"];
					$data_ufile['xpgw_type'] = $sheetData[$i]["Z"];
					$data_ufile['gzjb'] = $sheetData[$i]["AA"];
					$data_ufile['gzjbsj'] = $sheetData[$i]["AB"];
					$data_ufile['zzmm'] = $sheetData[$i]["AC"];
					$data_ufile['rtsj'] = $sheetData[$i]["AD"];
					$data_ufile['jrdpsj'] = $sheetData[$i]["AE"];
					$data_ufile['ypzyjszc'] = $sheetData[$i]["AF"];
					$data_ufile['ypzyjszcsj'] = $sheetData[$i]["AG"];
					$data_ufile['jsdj'] = $sheetData[$i]["AH"];
					$data_ufile['xpzc'] = $sheetData[$i]["AI"];
					$data_ufile['zcjbsrpr'] = $sheetData[$i]["AJ"];
					$data_ufile['xzchjbprsj'] = $sheetData[$i]["AK"];
					$data_ufile['xzwjbpxsj'] = $sheetData[$i]["AL"];
					$data_ufile['zgxueli'] = $sheetData[$i]["AQ"];
					$data_ufile['zgxuewei'] = $sheetData[$i]["AR"];
					$data_ufile['sfzh'] = $sheetData[$i]["AW"];
					$data_ufile['jtdz'] = $sheetData[$i]["AX"];
					$data_ufile['yzbm'] = $sheetData[$i]["AY"];
					$data_ufile['tel'] = $sheetData[$i]["AZ"];
					$data_ufile['beizhu'] = $sheetData[$i]["BA"];
					
					
					//$ufile_id = M("User_file") -> add($data_ufile);
					
				}
				//var_dump($data_ufile);die;
				//var_dump($sheetData[3]);die;
				if (get_system_config('system_license')) {
					$this -> _weixin_sync($import_user);
				}
				$this -> assign('jumpUrl', get_return_url());
				$this -> success('导入成功！');
			}
		} else {
			$this -> display();
		}
	}

	function add_role($user_id, $role_list) {
		$role_list = explode(",", $role_list);
		$role_list = array_filter($role_list);
		$RoleUser = M("RoleUser");
		$RoleUser -> user_id = $user_id;
		foreach ($role_list as $role_id) {
			$RoleUser -> role_id = $role_id;
			$RoleUser -> add();
		}
	}


    /**
     * 图表绘制 (员工信息一览)
     * zzp
     * 2017.9.13
     */
    public function member(){
		//员工总数
        $where_user['is_del'] = array('eq', 0);
		$where_user['peoplestatus'] = array('eq', 0);
        $user_count = M("User") -> where($where_user) -> count();
        $this -> assign('user_count', $user_count);
		
		
		//部门总数
        $where_dept['is_del'] = array('eq', 0);
        $dept_count = M("Dept") -> where($where_dept) -> count();
        $this -> assign('dept_count', $dept_count);
		
		//部门个数
		$where_pid['pid'] = array('neq', 0);
        $names = M("Dept") -> where($where_pid) ->field('id')-> select();
		
		$len =  count($names);
		
		
		//各部门人数
		for ($i=0; $i<$len; $i++) {
		  $where_deptid['dept_id'] = array('eq', current($names[$i]));
		  $dpren[] = M("User") -> where($where_deptid) -> count();
		} 
        $this -> assign('dpren', $dpren);
		
		
		
		//学历人数
		$where_benkexueli['zgxueli'] = array('eq',"大学本科");
		$where_benkexueli['user_id'] = array('neq',1);
		$benkexueli = M("User_file") -> where($where_benkexueli) -> count();
		$this -> assign('benkexueli', $benkexueli);
		//var_dump($benkexueli);die;
		$where_shuoshixueli['zgxueli'] = array('eq',"硕士研究生");
		$where_shuoshixueli['user_id'] = array('neq',1);
		$shuoshixueli = M("User_file") -> where($where_shuoshixueli) -> count();
		$this -> assign('shuoshixueli', $shuoshixueli);
		//var_dump($shuoshixueli);die;
		$where_boshixueli['zgxueli'] = array('eq',"博士研究生");
		$where_boshixueli['user_id'] = array('neq',1);
		$boshixueli = M("User_file") -> where($where_boshixueli) -> count();
		$this -> assign('boshixueli', $boshixueli);
		//var_dump($boshixueli);die;
		$where_xueli['user_id'] = array('neq',1);
		$xueli_count = M("User_file") -> where($where_xueli) -> count();
		$qtxueli = $xueli_count-$boshixueli-$shuoshixueli-$benkexueli;
		$this -> assign('qtxueli', $qtxueli);
		//var_dump($qtxueli);die;
		
		
		//岗位人数
		$where_xpgl['xpgw_type'] = array('eq', '管理');
        $user_guanli = M("User_file") -> where($where_xpgl) -> count();
		//var_dump($user_guanli);die;
        $this -> assign('user_guanli', $user_guanli);
		
		
		$where_xpjs['xpgw_type'] = array('eq', '技术');
        $user_jishu = M("User_file") -> where($where_xpjs) -> count();
		//var_dump($user_jishu);die;
        $this -> assign('user_jishu', $user_jishu);
		
		$where_xpgr['xpgw_type'] = array('eq', '工人');
        $user_gongren = M("User_file") -> where($where_xpgr) -> count();
		//var_dump($user_gongren);die;
		$this -> assign('user_gongren', $user_gongren);
		
		
		//查询年龄区间
		$sanshi['age'] = array('elt',30);
		$sanshi['user_id'] = array('neq',1);
		$sanshiage = M("User_file") -> where($sanshi) -> count();
		$this -> assign('sanshiage', $sanshiage);
		//var_dump($sanshi);die;
		$sanshi15['age'] = array('between',array('31','35'));
		$sanshi15['user_id'] = array('neq',1);
		$sanshi15age = M("User_file") -> where($sanshi15) -> count();
		$this -> assign('sanshi15age', $sanshi15age);
		//var_dump($sanshi15age);die;
		$sanshi60['age'] = array('between',array('36','40'));
		$sanshi60['user_id'] = array('neq',1);
		$sanshi60age = M("User_file") -> where($sanshi60) -> count();
		$this -> assign('sanshi60age', $sanshi60age);
		//var_dump($sanshi60age);die;
		$sishi15['age'] = array('between',array('41','45'));
		$sishi15['user_id'] = array('neq',1);
		$sishi15age = M("User_file") -> where($sishi15) -> count();
		$this -> assign('sishi15age', $sishi15age);
		//var_dump($sishi15age);die;
		$sishi60['age'] = array('between',array('46','50'));
		$sishi60['user_id'] = array('neq',1);
		$sishi60age = M("User_file") -> where($sishi60) -> count();
		$this -> assign('sishi60age', $sishi60age);
		//var_dump($sishi60age);die;
		$wushi15['age'] = array('between',array('51','55'));
		$wushi15['user_id'] = array('neq',1);
		$wushi15age = M("User_file") -> where($wushi15) -> count();
		$this -> assign('wushi15age', $wushi15age);
		//var_dump($wushi15age);die;
		$wushi69['age'] = array('between',array('56','59'));
		$wushi69['user_id'] = array('neq',1);
		$wushi69age = M("User_file") -> where($wushi69) -> count();
		$this -> assign('wushi69age', $wushi69age);
		//var_dump($wushi69age);die;
		$liushi['age'] = array('egt',60);
		$liushi['user_id'] = array('neq',1);
		$liushiage = M("User_file") -> where($liushi) -> count();
		$this -> assign('liushiage', $liushiage);
		//var_dump($liushiage);die;
		
		
		//工龄区间
		$where_glshi['gongli'] = array('elt',10);
		$glshi = M("User_file") -> where($where_glshi) -> count();
		$this -> assign('glshi', $glshi);
		$where_glshiershi['gongli'] = array('between',array('11','20'));
		$glshiershi = M("User_file") -> where($where_glshiershi) -> count();
		$this -> assign('glshiershi', $glshiershi);
		$where_glershi['gongli'] = array('egt',21);
		$glershi = M("User_file") -> where($where_glershi) -> count();
		$this -> assign('glershi', $glershi);
		
		//民族人数
		$where_mzhan['minzu'] = array('eq','汉族');
		$mzhan = M("User_file") -> where($where_mzhan) -> count();
		$this -> assign('mzhan', $mzhan);
		$where_mzman['minzu'] = array('eq','满族');
		$mzman = M("User_file") -> where($where_mzman) -> count();
		$this -> assign('mzman', $mzman);
		$where_mzshe['minzu'] = array('eq','畲族');
		$mzshe = M("User_file") -> where($where_mzshe) -> count();
		$this -> assign('mzshe', $mzshe);
		$where_mzhui['minzu'] = array('eq','回族');
		$mzhui = M("User_file") -> where($where_mzhui) -> count();
		$this -> assign('mzhui', $mzhui);
		$where_mzdong['minzu'] = array('eq','侗族');
		$mzdong = M("User_file") -> where($where_mzdong) -> count();
		$this -> assign('mzdong', $mzdong);
		
		
		
		//性别人数
		$where_fsex['is_del'] = array('eq', 0);
		$where_fsex['peoplestatus'] = array('eq', 0);
		$where_fsex['sex'] = array('neq', 'male');
        $user_fsex = M("User") -> where($where_fsex) -> count();
		//var_dump($user_fsex);die;
        $this -> assign('user_fsex', $user_fsex);
		
		$where_sex['is_del'] = array('eq', 0);
		$where_sex['peoplestatus'] = array('eq', 0);
		$where_sex['sex'] = array('eq', 'male');
        $user_sex = M("User") -> where($where_sex) -> count();
		//var_dump($user_sex);die;
        $this -> assign('user_sex', $user_sex);
		
		
		//聘用合同类型人数
		
		$where_htcq['htlx'] = array('eq', '长期');
        $user_htcq = M("User_file") -> where($where_htcq) -> count();
		//var_dump($user_guanli);die;
        $this -> assign('user_htcq', $user_htcq);
		
		
		$where_htzq['htlx'] = array('eq', '中期');
        $user_htzq = M("User_file") -> where($where_htzq) -> count();
		//var_dump($user_jishu);die;
        $this -> assign('user_htzq', $user_htzq);
		
		$where_htdq['htlx'] = array('eq', '短期');
        $user_htdq = M("User_file") -> where($where_htdq) -> count();
		//var_dump($user_gongren);die;
		$this -> assign('user_htdq', $user_htdq);
		
		
		
		
		
		//文件总数
        $file_count = M("File") -> count();
        $this -> assign('file_count', $file_count);
		
		

        $file_spage = M("File") -> sum('size');
        $this -> assign('file_spage', $file_spage);
		
		//政治面貌人数
		//$zzmm_count = M("User_file") -> count();
		$where_zzmmdy['zzmm'] = array('eq', "党员");
		$zmdy_count = M("User_file") -> where($where_zzmmdy) -> count();
		$this -> assign('zmdy_count', $zmdy_count);
		
		$where_zzmmqz['zzmm'] = array('eq', "群众");
		$zmqz_count = M("User_file") -> where($where_zzmmqz) -> count();
		$this -> assign('zmqz_count', $zmqz_count);
		
		$where_zzmmty['zzmm'] = array('eq', "团员");
		$zmty_count = M("User_file") -> where($where_zzmmty) -> count();
		$this -> assign('zmty_count', $zmty_count);
		
		$where_zzmmzgmzcjh['zzmm'] = array('eq', "中国民主促进会");
		$zmzgmzcjh_count = M("User_file") -> where($where_zzmmzgmzcjh) -> count();
		$this -> assign('zmzgmzcjh_count', $zmzgmzcjh_count);
		
		$where_zzmmzgmzjgh['zzmm'] = array('eq', "中国民主建国会");
		$zmzgmzjgh_count = M("User_file") -> where($where_zzmmzgmzjgh) -> count();
		$this -> assign('zmzgmzjgh_count', $zmzgmzjgh_count);
		
		$where_zzmmzgybdy['zzmm'] = array('eq', "中共预备党员");
		$zmzgybdy_count = M("User_file") -> where($where_zzmmzgybdy) -> count();
		$this -> assign('zmzgybdy_count', $zmzgybdy_count);
		
		//籍贯人数
		$where_jgbj['jiguan'] = array('eq', "北京市");
		$jgbj_count = M("User_file") -> where($where_jgbj) -> count();
		$this -> assign('jgbj_count', $jgbj_count);
		$where_jgzj['jiguan'] = array('eq', "浙江省");
		$jgzj_count = M("User_file") -> where($where_jgzj) -> count();
		$this -> assign('jgzj_count', $jgzj_count);
		$where_jghb['jiguan'] = array('eq', "河北省");
		$jghb_count = M("User_file") -> where($where_jghb) -> count();
		$this -> assign('jghb_count', $jghb_count);
		$where_jgnmg['jiguan'] = array('eq', "内蒙古自治区");
		$jgnmg_count = M("User_file") -> where($where_jgnmg) -> count();
		$this -> assign('jgnmg_count', $jgnmg_count);
		$where_jgsd['jiguan'] = array('eq', "山东省");
		$jgsd_count = M("User_file") -> where($where_jgsd) -> count();
		$this -> assign('jgsd_count', $jgsd_count);
		$where_jghenan['jiguan'] = array('eq', "河南省");
		$jghenan_count = M("User_file") -> where($where_jghenan) -> count();
		$this -> assign('jghenan_count', $jghenan_count);
		$where_jgah['jiguan'] = array('eq', "安徽省");
		$jgah_count = M("User_file") -> where($where_jgah) -> count();
		$this -> assign('jgah_count', $jgah_count);
		$where_jgtj['jiguan'] = array('eq', "天津市");
		$jgtj_count = M("User_file") -> where($where_jgtj) -> count();
		$this -> assign('jgtj_count', $jgtj_count);
		$where_jgjs['jiguan'] = array('eq', "江苏省");
		$jgjs_count = M("User_file") -> where($where_jgjs) -> count();
		$this -> assign('jgjs_count', $jgjs_count);
		$where_jgsc['jiguan'] = array('eq', "四川省");
		$jgsc_count = M("User_file") -> where($where_jgsc) -> count();
		$this -> assign('jgsc_count', $jgsc_count);
		$where_jgsx['jiguan'] = array('eq', "山西省");
		$jgsx_count = M("User_file") -> where($where_jgsx) -> count();
		$this -> assign('jgsx_count', $jgsx_count);
		$where_jggd['jiguan'] = array('eq', "广东省");
		$jggd_count = M("User_file") -> where($where_jggd) -> count();
		$this -> assign('jggd_count', $jggd_count);
		$where_jgln['jiguan'] = array('eq', "辽宁省");
		$jgln_count = M("User_file") -> where($where_jgln) -> count();
		$this -> assign('jgln_count', $jgln_count);
		$where_jghunan['jiguan'] = array('eq', "湖南省");
		$jghunan_count = M("User_file") -> where($where_jghunan) -> count();
		$this -> assign('jghunan_count', $jghunan_count);
		$where_jghlj['jiguan'] = array('eq', "黑龙江省");
		$jghlj_count = M("User_file") -> where($where_jghlj) -> count();
		$this -> assign('jghlj_count', $jghlj_count);
		$where_jgsh['jiguan'] = array('eq', "上海市");
		$jgsh_count = M("User_file") -> where($where_jgsh) -> count();
		$this -> assign('jgsh_count', $jgsh_count);
		$where_jgjx['jiguan'] = array('eq', "江西省");
		$jgjx_count = M("User_file") -> where($where_jgjx) -> count();
		$this -> assign('jgjx_count', $jgjx_count);
		$where_jgyn['jiguan'] = array('eq', "云南省");
		$jgyn_count = M("User_file") -> where($where_jgyn) -> count();
		$this -> assign('jgyn_count', $jgyn_count);
		$where_jghb['jiguan'] = array('eq', "湖北省");
		$jghb_count = M("User_file") -> where($where_jghb) -> count();
		$this -> assign('jghb_count', $jghb_count);
		$where_jgjl['jiguan'] = array('eq', "吉林省");
		$jgjl_count = M("User_file") -> where($where_jgjl) -> count();
		$this -> assign('jgjl_count', $jgjl_count);
		$where_jgfj['jiguan'] = array('eq', "福建省");
		$jgfj_count = M("User_file") -> where($where_jgfj) -> count();
		$this -> assign('jgfj_count', $jgfj_count);
		//var_dump($jgfj_count);die;
		
		
		
		//职称一览饼
		$where_userzcgj['jsdj'] = array('eq', "高级");
		$userzcgj_count = M("User_file") -> where($where_userzcgj) -> count();
		$this -> assign('userzcgj_count', $userzcgj_count);
		$where_userzczj['jsdj'] = array('eq', "中级");
		$userzczj_count = M("User_file") -> where($where_userzczj) -> count();
		$this -> assign('userzczj_count', $userzczj_count);
		$where_userzccj['jsdj'] = array('eq', "初级");
		$userzccj_count = M("User_file") -> where($where_userzccj) -> count();
		$this -> assign('userzccj_count', $userzccj_count);
		$where_userzcgr['jsdj'] = array('eq', "工人");
		$userzcgr_count = M("User_file") -> where($where_userzcgr) -> count();
		$this -> assign('userzcgr_count', $userzcgr_count);
		$userzczs_count = M("User_file") -> count();
		$userzcqt_count = $userzczs_count - $userzcgj_count - $userzczj_count - $userzccj_count - $userzcgr_count;
		$this -> assign('userzcqt_count', $userzcqt_count);
		//var_dump($userzcqt_count);die;
		
		
		//职称一览柱
		$where_userxpzcgj['xpzc'] = array('eq', "高级工程师");
		$userxpzcgj_count = M("User_file") -> where($where_userxpzcgj) -> count();
		$this -> assign('userxpzcgj_count', $userxpzcgj_count);
		$where_userxpzcjsjgj['xpzc'] = array('eq', "教授级高级工程师");
		$userxpzcjsjgj_count = M("User_file") -> where($where_userxpzcjsjgj) -> count();
		$this -> assign('userxpzcjsjgj_count', $userxpzcjsjgj_count);
		$where_userxpzcgcs['xpzc'] = array('eq', "工程师");
		$userxpzcgcs_count = M("User_file") -> where($where_userxpzcgcs) -> count();
		$this -> assign('userxpzcgcs_count', $userxpzcgcs_count);
		$where_userxpzcdzsw['xpzc'] = array('eq', "电子商务设计师");
		$userxpzcdzsw_count = M("User_file") -> where($where_userxpzcdzsw) -> count();
		$this -> assign('userxpzcdzsw_count', $userxpzcdzsw_count);
		$where_userxpzcjrzj['xpzc'] = array('eq', "金融经济（中级）");
		$userxpzcjrzj_count = M("User_file") -> where($where_userxpzcjrzj) -> count();
		$this -> assign('userxpzcjrzj_count', $userxpzcjrzj_count);
		$where_userxpzckjs['xpzc'] = array('eq', "会计师");
		$userxpzckjs_count = M("User_file") -> where($where_userxpzckjs) -> count();
		$this -> assign('userxpzckjs_count', $userxpzckjs_count);
		$where_userxpzczlkjs['xpzc'] = array('eq', "助理会计师");
		$userxpzczlkjs_count = M("User_file") -> where($where_userxpzczlkjs) -> count();
		$this -> assign('userxpzczlkjs_count', $userxpzczlkjs_count);
		$where_userxpzcpg['xpzc'] = array('eq', "普工");
		$userxpzcpg_count = M("User_file") -> where($where_userxpzcpg) -> count();
		$this -> assign('userxpzcpg_count', $userxpzcpg_count);
		$where_userxpzcsysjs8['xpzc'] = array('eq', "实验师（技术8）");
		$userxpzcsysjs8_count = M("User_file") -> where($where_userxpzcsysjs8) -> count();
		$this -> assign('userxpzcsysjs8_count', $userxpzcsysjs8_count);
		$where_userxpzcwlgcs['xpzc'] = array('eq', "网络工程师");
		$userxpzcwlgcs_count = M("User_file") -> where($where_userxpzcwlgcs) -> count();
		$this -> assign('userxpzcwlgcs_count', $userxpzcwlgcs_count);
		$where_userxpzczjg['xpzc'] = array('eq', "中级工");
		$userxpzczjg_count = M("User_file") -> where($where_userxpzczjg) -> count();
		$this -> assign('userxpzczjg_count', $userxpzczjg_count);
		$where_userxpzcxxxt['xpzc'] = array('eq', "信息系统项目管理师");
		$userxpzcxxxt_count = M("User_file") -> where($where_userxpzcxxxt) -> count();
		$this -> assign('userxpzcxxxt_count', $userxpzcxxxt_count);
		$where_userxpzchs['xpzc'] = array('eq', "护师");
		$userxpzchs_count = M("User_file") -> where($where_userxpzchs) -> count();
		$this -> assign('userxpzchs_count', $userxpzchs_count);
		
		
		
		
		//领导政治面貌
		$where_lingdaody['xrzw'] = array('neq', "");
		$where_lingdaody['zzmm'] = array('eq', "党员");
		$lingdaody_count = M("User_file") -> where($where_lingdaody) -> count();
		$this -> assign('lingdaody_count', $lingdaody_count);
		
		$where_lingdaoqz['xrzw'] = array('neq', "");
		$where_lingdaoqz['zzmm'] = array('eq', "群众");
		$lingdaoqz_count = M("User_file") -> where($where_lingdaoqz) -> count();
		$this -> assign('lingdaoqz_count', $lingdaoqz_count);
		
		$where_lingdaocjh['xrzw'] = array('neq', "");
		$where_lingdaocjh['zzmm'] = array('eq', "中国民主促进会");
		$lingdaocjh_count = M("User_file") -> where($where_lingdaocjh) -> count();
		$this -> assign('lingdaocjh_count', $lingdaocjh_count);
		
		//领导年龄
		$where_lingdaoage35['age'] = array('between',array('31','35'));
		$where_lingdaoage35['xrzw'] = array('neq', "");
		$lingdaoage35 = M("User_file") -> where($where_lingdaoage35) -> count();
		$this -> assign('lingdaoage35', $lingdaoage35);
		
		$where_lingdaoage40['age'] = array('between',array('36','40'));
		$where_lingdaoage40['xrzw'] = array('neq', "");
		$lingdaoage40 = M("User_file") -> where($where_lingdaoage40) -> count();
		$this -> assign('lingdaoage40', $lingdaoage40);
		
		$where_lingdaoage45['age'] = array('between',array('41','45'));
		$where_lingdaoage45['xrzw'] = array('neq', "");
		$lingdaoage45 = M("User_file") -> where($where_lingdaoage45) -> count();
		$this -> assign('lingdaoage45', $lingdaoage45);
		
		$where_lingdaoage50['age'] = array('between',array('46','50'));
		$where_lingdaoage50['xrzw'] = array('neq', "");
		$lingdaoage50 = M("User_file") -> where($where_lingdaoage50) -> count();
		$this -> assign('lingdaoage50', $lingdaoage50);
		
		$where_lingdaoage55['age'] = array('between',array('51','55'));
		$where_lingdaoage55['xrzw'] = array('neq', "");
		$lingdaoage55 = M("User_file") -> where($where_lingdaoage55) -> count();
		$this -> assign('lingdaoage55', $lingdaoage55);
		
		$where_lingdaoage59['age'] = array('between',array('56','59'));
		$where_lingdaoage59['xrzw'] = array('neq', "");
		$lingdaoage59 = M("User_file") -> where($where_lingdaoage59) -> count();
		$this -> assign('lingdaoage59', $lingdaoage59);
		
		
		//领导学历
		$where_lingdaobk['zgxueli'] = array('eq',"大学本科");
		$where_lingdaobk['xrzw'] = array('neq', "");
		$lingdaobk = M("User_file") -> where($where_lingdaobk) -> count();
		$this -> assign('lingdaobk', $lingdaobk);
		//var_dump($benkexueli);die;
		$where_lingdaosj['zgxueli'] = array('eq',"硕士研究生");
		$where_lingdaosj['xrzw'] = array('neq', "");
		$lingdaosj = M("User_file") -> where($where_lingdaosj) -> count();
		$this -> assign('lingdaosj', $lingdaosj);
		//var_dump($shuoshixueli);die;
		$where_lingdaobs['zgxueli'] = array('eq',"博士研究生");
		$where_lingdaobs['xrzw'] = array('neq', "");
		$lingdaobs = M("User_file") -> where($where_lingdaobs) -> count();
		$this -> assign('lingdaobs', $lingdaobs);
		//var_dump($boshixueli);die;
		$where_lingdaoqt['xrzw'] = array('neq', "");
		$ldxueli_count = M("User_file") -> where($where_lingdaoqt) -> count();
		$ldqtxueli_count = $ldxueli_count-$lingdaobk-$lingdaosj-$lingdaobs;
		$this -> assign('ldqtxueli_count', $ldqtxueli_count);
		
		
		

        $where_size['type'] = array('eq', 1);
        $file_size = M("SystemLog") -> where($where_size) -> getField('time,data');
        $file_size = conv_flot($file_size);
        $this -> assign('file_size', $file_size);
		
		//print_r($file_size);die;

        //绘制 一览表
        $where_position['is_del'] = array('eq', 0);
        $position = M("Position") -> where($where_position) ->select();

        foreach($position as $k=>$v){
            $where_user['is_del'] = array('eq', 0);
            $where_user['position_id'] = array('eq', $v['id']);

            $new_position[$k]['value'] = M("User") -> where($where_user) ->count();
            $new_position[$k]['name'] = $v['name'];

        }



        $this->assign('position',json_encode($new_position));


        //print_r($new_position);die;




        $this -> display();
    }

    //图表绘制 start  flot date 插件
    function get_flot_data() {
        $range=I('range');

        switch ($range) {
            case 'm':
                $offset=mktime(0, 0 , 0,date("m")-1,date("d"),date("Y"));
                break;

            case 'q':
                $offset=mktime(0, 0 , 0,date("m")-3,date("d"),date("Y"));
                break;

            case 'y':
                $offset=mktime(0, 0 , 0,date("m")-112,date("d"),date("Y"));
                break;
            default:

                break;
        }
        $where_size['type'] = array('eq', 1);
        $where_size['time']=array('gt',$offset);
        $file_size = M("SystemLog") -> where($where_size) -> getField('time,data');
        $file_size = conv_flot($file_size);

        $where_count['type'] = array('eq', 2);
        $where_count['time']=array('gt',$offset);
        $file_count = M("SystemLog") -> where($where_count) -> getField('time,data');
        $file_count = conv_flot($file_count);

        $return['file_size']=$file_size;
        $return['file_count']=$file_count;
        $this->ajaxReturn($return);
    }

    function RandAbc($length = "") {//返回随机字符串
        $str = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
        return str_shuffle($str);
    }

    function get_auth() {
        $server_info = $this -> _SERVER('SERVER_NAME') . '|' . $this -> _SERVER('REMOTE_ADDR');
        $server_info .= '|' . $this -> _SERVER('DOCUMENT_ROOT');

        //$result = @file_get_contents('http://www.smeoa.com/get_auth.php?' . base64_encode($server_info));
        $result = "";
        return $result;
    }

    function _GET($n) {
        return isset($_GET[$n]) ? $_GET[$n] : NULL;
    }

    function _SERVER($n) {
        return isset($_SERVER[$n]) ? $_SERVER[$n] : '[undefine]';
    }
    //图表绘制 end


    /**
     * 员工档案
     * zzp
     * 2017.9.13
     */
    public function member_list(){

       // dump($_POST);

        $plugin['date'] = true;
        $this -> assign("plugin", $plugin);

        $model = M("Position");
        $list = $model -> where('is_del=0') -> order('sort asc') -> getField('id,name');
        $this -> assign('position_list', $list);
		//print_r($list);die;
        $model = M("Dept");
        $list = $model -> where('is_del=0') -> order('sort asc') -> getField('id,name');
        $this -> assign('dept_list', $list);
		
        $model = M("User");
        $list = $model -> where('is_del=0') -> order('id asc') -> getField('emp_no,name');
        $this -> assign('agent_list', $list);


        if (isset($_POST['eq_is_del'])) {
            $eq_is_del = $_POST['eq_is_del'];
        } else {
            $eq_is_del = "0";
        }
        //print_r(think_decrypt("MDAwMDAwMDAwMITdma4"));die;
		//print_r($eq_is_del);die;
		
        $this -> assign('eq_is_del', $eq_is_del);

        $map = $this -> _search();

        //dump($map);die;

        if (method_exists($this, '_search_filter')) {
            $this -> _search_filter($map);
        }


        $map['is_del'] = array('eq', $eq_is_del);
		$map['peoplestatus'] = array('exp',' IN (0,1) ');
		

        $model = D("User");

        if (!empty($model)) {
            $this -> _list($model, $map, "emp_no");
        }

       // dump(M("User")->getLastSql());die;

        $this -> display();
    }
	
	//我的档案
	/*public function my_list(){
		$plugin['date'] = true;
		$this -> assign("plugin", $plugin);
		$user=D("UserView")->find(get_user_id());
		//print_r($user);die;
		$this->assign("vo",$user);



        $map['user_id'] = array('eq',get_user_id());
        $infos = M('User_file')->where($map)->select();

        foreach($infos as $k=>$v ){
            $info = $v;
        }

        //dump($info);die;

        $this->assign('info',$info);

        $this->assign('str',$info['jiaoyu']);
		$this->assign('zz_str',$info['zz_jiaoyu']);



		$this->display();
	}*/
	
	
	
	//我的档案
	public function my_list(){
		$plugin['date'] = true;
        $plugin['uploader'] = true;
        $this -> assign("plugin", $plugin);//控件
		$id = get_user_id();
		//var_dump($_POST['kaohetime']);die;
        //$id = I('param.id');
		//$id = $GET['id'];
		//var_dump($id);die;
        $vo = M('User')->find($id);
        $this -> assign('vo', $vo);//基本信息

        $map['user_id'] = array('eq',get_user_id());
        $infos = M('User_file')->where($map)->select();

        foreach($infos as $k=>$v ){
            $info = $v;
        }

        //print_r($info);die;
        $this->assign('info',$info);//详细信息



        if(empty($info['jiaoyu'])){
            $this->assign('str',"''");//全日制教育信息
        }else{
            $this->assign('str',$info['jiaoyu']);//全日制教育信息
        }

        if(empty($info['zz_jiaoyu'])){
            $this->assign('zz_str',"''");//在职教育信息
        }else{
            $this->assign('zz_str',$info['zz_jiaoyu']);//在职教育信息
        }
		
		if(empty($info['peixun'])){
            $this->assign('px_str',"''");//培训经历
        }else{
            $this->assign('px_str',$info['peixun']);//培训经历
        }

        if(empty($info['kaohe'])){
            $this->assign('kaohe_str',"''");//年度考核
        }else{
            $this->assign('kaohe_str',$info['kaohe']);//年度考核
        }

        if(empty($info['huojiang'])){
            $this->assign('huojiang_str',"''");//年
        }else{
            $this->assign('huojiang_str',$info['huojiang']);//
        }

        if(empty($info['gongzuo'])){
            $this->assign('gongzuo_str',"''");//工作经历
        }else{
            $this->assign('gongzuo_str',$info['gongzuo']);//工作经历
        }
		
		if(empty($info['zhicheng'])){
            $this->assign('zhicheng_str',"''");//职称经历
        }else{
            $this->assign('zhicheng_str',$info['zhicheng']);//职称经历
        }
		
		$this->display();
	}
	
	
	
    //基础身份显示
	public function basic_list(){

       // dump($_POST);

        $plugin['date'] = true;
        $this -> assign("plugin", $plugin);

        $model = M("Position");
        $list = $model -> where('is_del=0') -> order('sort asc') -> getField('id,name');
        $this -> assign('position_list', $list);

        $model = M("Dept");
        $list = $model -> where('is_del=0') -> order('sort asc') -> getField('id,name');
        $this -> assign('dept_list', $list);

        $model = M("User");
        $list = $model -> where('is_del=0') -> order('sort asc') -> getField('emp_no,name');
        $this -> assign('agent_list', $list);


        if (isset($_POST['eq_is_del'])) {
            $eq_is_del = $_POST['eq_is_del'];
        } else {
            $eq_is_del = "0";
        }
        //print_r(think_decrypt("MDAwMDAwMDAwMITdma4"));die;
        $this -> assign('eq_is_del', $eq_is_del);

        $map = $this -> _search();

        //dump($map);die;

        if (method_exists($this, '_search_filter')) {
            $this -> _search_filter($map);
        }


        $map['is_del'] = array('eq', $eq_is_del);
		
		$map['peoplestatus'] = array('exp',' IN (0,1) ');
        $model = D("User");

        if (!empty($model)) {
            $this -> _list($model, $map, "emp_no");
        }

       // dump(M("User")->getLastSql());die;

        $this -> display();
    }
    /**
     * 员工档案 的列表信息
     * zzp
     * 2017.9.9
     */
    public function member_edit(){
        $plugin['date'] = true;
        $plugin['uploader'] = true;
        $this -> assign("plugin", $plugin);//控件
		//var_dump($_POST['kaohetime']);die;
        $id = I('param.id');

        $vo = M('User')->find($id);
        $this -> assign('vo', $vo);//基本信息

        $map['user_id'] = array('eq',$id);
        $infos = M('User_file')->where($map)->select();

        foreach($infos as $k=>$v ){
            $info = $v;
        }

        //print_r($info);die;
        $this->assign('info',$info);//详细信息



        if(empty($info['jiaoyu'])){
            $this->assign('str',"''");//全日制教育信息
        }else{
            $this->assign('str',$info['jiaoyu']);//全日制教育信息
        }

        if(empty($info['zz_jiaoyu'])){
            $this->assign('zz_str',"''");//在职教育信息
        }else{
            $this->assign('zz_str',$info['zz_jiaoyu']);//在职教育信息
        }
		
		if(empty($info['peixun'])){
            $this->assign('px_str',"''");//培训经历
        }else{
            $this->assign('px_str',$info['peixun']);//培训经历
        }

        if(empty($info['kaohe'])){
            $this->assign('kaohe_str',"''");//年度考核
        }else{
            $this->assign('kaohe_str',$info['kaohe']);//年度考核
        }

        if(empty($info['huojiang'])){
            $this->assign('huojiang_str',"''");//年
        }else{
            $this->assign('huojiang_str',$info['huojiang']);//
        }

        if(empty($info['gongzuo'])){
            $this->assign('gongzuo_str',"''");//工作经历
        }else{
            $this->assign('gongzuo_str',$info['gongzuo']);//工作经历
        }
		
		if(empty($info['zhicheng'])){
            $this->assign('zhicheng_str',"''");//职称经历
        }else{
            $this->assign('zhicheng_str',$info['zhicheng']);//职称经历
        }
		
		
		//var_dump($info['kaohe']{["kaohe_time"]});die;
		//var_dump(json_decode($info['kaohe']['kaohe_time']));die;
		





        //民族
        $minzu = array("请选择","汉族","蒙古族","回族","藏族","维吾尔族","苗族","彝族","壮族","布依族","朝鲜族","满族","侗族","瑶族","白族","土家族","哈尼族","哈萨克族","傣族","黎族","傈僳族","佤族","畲族","高山族","拉祜族","水族","东乡族","纳西族","景颇族","柯尔克孜族","土族","达斡尔族","仫佬族","羌族","布朗族","撒拉族","毛南族","仡佬族","锡伯族","阿昌族","普米族","塔吉克族","怒族","乌孜别克族","俄罗斯族","鄂温克族","德昂族","保安族","裕固族","京族","塔塔尔族","独龙族","鄂伦春族","赫哲族","门巴族","珞巴族","基诺族");
        //省份
        $shenfen = array("请选择","北京市","天津市","河北省","山西省","内蒙古自治区","辽宁省","吉林省","黑龙江省","上海市","江苏省","浙江省","安徽省","福建省","江西省","山东省","河南省","湖北省","湖南省","广东省","广西壮族自治区","海南省","重庆市","四川省","贵州省","云南省","西藏自治区","陕西省","甘肃省","青海省","宁夏回族自治区","新疆维吾尔自治区","香港特别行政区","澳门特别行政区","台湾省","其它");
        //政治面貌
        $zzmm= array("请选择","党员","中共预备党员","团员","中国民主促进会","中国民主建国会","群众");
        //技术级别
        $jsdj = array("请选择","高级","中级","初级","工人");
        //工作状态
        $gzzt = array('请选择','在岗','借调','援藏','援疆','其他');
		//获奖年份
		$hjnf = array('请选择','1990','1991','1992','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004','2005','2006','2007','2008','2009','2010','2011','2012','2013','2014','2015','2016','2017',);
        
		$this->assign('gzzt',$gzzt);
        $this->assign('jsdj',$jsdj);
        $this->assign('minzu',$minzu);
        $this->assign('shenfen',$shenfen);
        $this->assign('zzmm',$zzmm);
		$this->assign('hjnf',$hjnf);
		$hjnfjs[] = json_encode($hjnf);
		$this->assign('hjnfjs',$hjnfjs);
		//var_dump($hjnfjs);die;
		//var_dump($kaohe_str['kaohe_time']);die;

        $this->display();
    }
    //上传
    public function upload() {
        $this -> _upload();
    }
    //下载
    function down($attach_id) {
        $this -> _down($attach_id);
    }
    /**
     * 员工档案的添加
     * zzp
     * 2017.9.10
     */
    public function user_add() {
        $plugin['date'] = true;
        $this -> assign("plugin", $plugin);

        $model = M("Position");
        $list = $model -> where('is_del=0') -> order('sort asc') -> getField('id,name');
        $this -> assign('position_list', $list);

        $model = M("Dept");
        $list = $model -> where('is_del=0') -> order('sort asc') -> getField('id,name');
        $this -> assign('dept_list', $list);

        $this -> display();
    }

    /**
     * 员工档案 的添加,编辑  保存
     * zzp
     * 2017.9.9
     */
    public function user_save(){

       // echo "<pre>";
           //print_r($_POST['kaohe']);die;

        $model = M('User');

        if(empty($_POST['id'])){
            if (false === $model -> create() ) {
                $this -> error($model -> getError());
            }

            $list = $model -> add();

            if ($list !== false) {//保存成功

                $this -> success('保存成功!',U('User/member_edit',array('id'=>$_POST['id'])));
            } else {
                $this -> error('保存失败!');
                //失败提示
            }


        }else{

            $list = $model -> save($_POST);
			

            if ($list !== false) {//保存成功
                $this -> assign('jumpUrl',U('User/member_edit',array('id'=>$_POST['id'])));

               /// $this -> success('保存成功222222!');

                if(!empty($_POST['user_id'])){

                    $mod = M('User_file');
                    $map['user_id'] = $_POST['user_id'];
                    $select = $mod->where($map)->select();

                    $uid = $select[0]['uid'];

                    ///echo $uid;

                    if(empty($select)){

                        if (false === $mod -> create() ) {
                            $this -> error($mod -> getError());
                        }

                        $list_file = $mod -> add();

                        if ($list_file !== false) {//保存成功

                            $this -> success('保存成功!');
                           // $this -> success('新增成功!');
                        } else {
                            $this -> error('保存失败!');
                            //失败提示
                        }


                    }else{

                         $_POST['uid'] = $uid;

                         $list_info = $mod -> save($_POST);

                         if ($list_info !== false) {//保存成功
                             $this -> assign('jumpUrl', get_return_url());
                             $this -> success('保存成功!',U('User/member_edit',array('id'=>$_POST['id'])));
                         } else {
                             $this -> error('保存失败!');
                             //失败提示
                         }

                    }


                }

            }

        }

    }
	
	
	
	
	//查询统计
	public function chaxun(){
		echo 1;
	}


}



?>